@model BookmarkViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Bookmark</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.URL, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.URL, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.URL, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" id="select-existing-category-section">
            <label class="control-label col-md-2">Select a category</label>
            <div class="col-md-5">
                @Html.DropDownListFor(model => model.CategoryId, Model.Categories, new { @class = "dropdown form-control" })
            </div>
            <div class="col-md-offset-2 col-md-10" style="margin-top: 10px;">
                <input id="add-new-category-btn" type="button" value="Add new category" class="btn btn-primary" />
            </div>
        </div>
        <div class="form-group" id="add-new-category-section" hidden="hidden">
                @Html.LabelFor(model => model.Category.Name, "Add new category", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.Category.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Category.Name, "", new { @class = "text-danger" })
                </div>
                <div style="display: flex;">
                    <div class="col-md-offset-2 col-md-2" style="margin-top: 10px;">
                        <input id="add-category-btn" type="button" value="Add category" class="btn btn-primary" data-url="@Url.Action("CreateAndReturnJsonResult", "Categories")" />
                    </div>
                    <div class="col-md-offset-2 col-md-2" style="margin-top: 10px;">
                        <input id="back-to-select-category-btn" type="button" value="Back to category selection" class="btn btn-info" />
                    </div>
                </div>
            </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
            </div>
        </div>
    </div>
}


@*@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Category</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}*@

@*@using (Html.BeginForm("Create", "Categories"))
{
    <div class="form-group" id="add-new-category-section" hidden="hidden">
        @Html.LabelFor(model => model.Category.Name, "Add new category", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Category.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Category.Name, "", new { @class = "text-danger" })
        </div>
        <div style="display: flex;">
            <div class="col-md-offset-2 col-md-2" style="margin-top: 10px;">
                <input id="add-category-btn" type="submit" value="Add category" class="btn btn-primary" data-url="@Url.Action("Create", "Categories")" />
            </div>
            <div class="col-md-offset-2 col-md-2" style="margin-top: 10px;">
                <input id="back-to-select-category-btn" type="button" value="Back to category selection" class="btn btn-info" />
            </div>
        </div>
    </div>

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
}*@

@*make a bundle and add these scripts*@
@section scripts {
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/js/_AddNewCategory.js"></script>
}

